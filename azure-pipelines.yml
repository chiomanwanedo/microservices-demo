trigger:
  branches:
    include:
      - main

parameters:
  - name: services
    type: object
    default:
      - adservice
      - cartservice
      - checkoutservice
      - currencyservice
      - emailservice
      - frontend
      - paymentservice
      - productcatalogservice
      - recommendationservice
      - shippingservice

stages:
  - stage: BuildAndPush
    jobs:
      - job: DockerBuild
        pool:
          name: 'Default'
        steps:
          - checkout: self  # This checks out Repo A where the pipeline YAML lives

          # ✅ Clone your microservices repo (Repo B)
          - script: |
              git clone https://github.com/chiomanwanedo/microservices-demo.git
            displayName: 'Clone Microservices Repo'

          # ✅ Run Gradle build inside Repo B to download dependencies
          - script: |
              cd microservices-demo
              chmod +x gradlew
              ./gradlew build --refresh-dependencies
            displayName: 'Run Gradle Build and Pre-fetch Dependencies'

          # ✅ Loop through each microservice and build Docker images
          - ${{ each service in parameters.services }}:
              - task: Docker@2
                displayName: 'Build and Push ${{ service }} Docker Image'
                inputs:
                  command: buildAndPush
                  dockerfile: 'microservices-demo/src/${{ service }}/Dockerfile'
                  containerRegistry: 'online-boutique'
                  repository: '${{ service }}'
                  tags: '$(Build.BuildId)'
                  platform: 'linux/amd64'
